@model ClothKai.Web.ViewModels.CheckoutViewModel
@{
    ViewBag.Title = "Checkout";
}

@if (Model.CartProducts != null && Model.CartProducts.Count > 0)
{
    var i = 1;
    <div class="container mt-lg-4">
        <div class="row">
            <div class="col-md-4 order-md-2 mb-4">
                <h4 class="d-flex justify-content-between align-items-center mb-3">
                    <span class="text-muted">Your cart</span>
                    <span class="badge badge-secondary badge-pill">3</span>
                </h4>
                <ul class="list-group mb-3">
                    @foreach (var product in Model.CartProducts)
                    {
                        var productQuantity = Model.ProductIDs.Where(x => x == product.ID).Count();
                        <li class="list-group-item d-flex justify-content-between lh-condensed" data-id="@product.ID">
                            <div>
                                <h6 class="my-0">@i. @product.Name <span class="badge badge-info">@productQuantity</span></h6>
                                <small class="text-muted">@(product.Description.Length > 30 ? product.Description.Substring(0,29) + "..." : product.Description)</small>
                            </div>
                            <span class="text-muted">$ @product.Price - Total: $ @(product.Price * productQuantity)</span>
                        </li>
                        i++;
                    }
                    <li class="list-group-item d-flex justify-content-between">
                        <span>Total (USD)</span>
                        <strong>$ @Model.CartProducts.Sum(x => x.Price * Model.ProductIDs.Where(productID => productID == x.ID).Count())</strong>
                    </li>
                </ul>

                <form class="card p-2">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Promo code">
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-secondary">Redeem</button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-md-8 order-md-1">
                <h4 class="mb-3">Billing address</h4>
                <form class="needs-validation" novalidate="">
                    <div class="row">
                        <div class="col-md-12 mb-3">
                            <label for="firstName">Name</label>
                            <input type="text" class="form-control" id="Name" placeholder="" value="@Model.User.Name" required="">
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="email">Email <span class="text-muted">(Optional)</span></label>
                        <input type="email" class="form-control" id="Email" placeholder="you@example.com" value="@Model.User.Email">
                    </div>

                    <div class="mb-3">
                        <label for="address">Address</label>
                        <input type="text" class="form-control" id="address" placeholder="1234 Main St" required="" value="@Model.User.Address">
                    </div>
                    <hr class="mb-4">
                    <button id="placeOrderbtn" class="btn btn-primary btn-lg btn-block" type="button">Place Order</button>
                </form>
            </div>
        </div>
    </div>
    <script>
    $("#placeOrderbtn").click(function () {
        $.ajax({
            url: "@Url.Action("PlaceOrder","Shop")",
            data: {
                productIDs: "@string.Join("-",Model.ProductIDs)"
            }
        })
            .done(function (response) {
                if (response.Success) {
                    $.cookie('CartProducts','', { expires: 10,path: '/' });
                    updateCartProducts();
                    Swal.fire('Place Order is success')
                        .then((value) => {
                            window.location = '@Url.Action("Index","Shop")';
                        });;
                }
                else {
                    Swal.fire(
                        'The Internet?',
                        'That thing is still around?',
                        'warning'
                    )
                }
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Error");
            });
    });
    </script>
}
else
{

}


