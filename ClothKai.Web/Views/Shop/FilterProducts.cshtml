@model ClothKai.Web.ViewModels.FilterProductsViewModel
@{
    var defaultImage = "/Content/images/a183d876-619c-4ca9-a20c-bd19d0448e14.png";
    var count = Model.Pager.CurrentPage * Model.Pager.PageSize;
    var countUp = count < Model.Pager.TotalItems ? count : Model.Pager.TotalItems;
}
<div class="filter-shop clearfix">
    <p class="showing-product float-right">
        Showing @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + 1) – @(countUp) of @Model.Pager.TotalItems Products
    </p>
</div><!-- /.filte-shop -->
<div class="product-content product-threecolumn product-slidebar clearfix">
    <ul class="product style2 sd1">
        @foreach (var product in Model.Products)
        {
            var image = product.ImageURL != null ? product.ImageURL : defaultImage;
            <li class="product-item">
                <div class="product-thumb clearfix">
                    <a href="@Url.Action("Detail","Product",new { ID = product.ID})">
                        <img src="@image" alt="@product.Name" style="height:250px;">
                    </a>
                    <span class="new">New</span>
                </div>
                <div class="product-info clearfix mt-2">
                    <span class="product-title">
                        @product.Name
                    </span>
                    <div class="price">
                        <ins>
                            <span class="amount">$ @product.Price</span>
                        </ins>
                    </div>
                </div>
                <div class="add-to-cart text-center">
                    <a class="productAddToCart" data-id="@product.ID">ADD TO CART</a>
                </div>
                <a href="#" class="like"><i class="fa fa-heart-o"></i></a>
            </li>
        }
    </ul><!-- /.product -->
</div><!-- /.product-content -->
@if (Model.Pager != null)
{
    <div class="product-pagination text-center clearfix">
        <ul class="flat-pagination">
            @if (Model.Pager.CurrentPage > 1)
            {
                <li class="prev">
                    <a data-href="@Url.Action("FilterProducts","Shop",new { pageNo = (Model.Pager.CurrentPage - 1), searchTerm = Model.searchTerm, categoryID = Model.CategoryID, sortBy = Model.sortBy})" class="pageDataLink"><i class="fa fa-angle-left"></i></a>
                </li>
            }
            @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                var actived = Model.Pager.CurrentPage == page ? "active" : string.Empty;
                <li class="@actived"><a data-href="@Url.Action("FilterProducts","Shop",new { pageNo = page, searchTerm = Model.searchTerm, categoryID = Model.CategoryID, sortBy = Model.sortBy})" class="pageDataLink">@page</a></li>
            }
            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <li><a data-href="@Url.Action("FilterProducts","Shop",new { pageNo = (Model.Pager.CurrentPage + 1), searchTerm = Model.searchTerm, categoryID = Model.CategoryID, sortBy = Model.sortBy})" class="pageDataLink"><i class="fa fa-angle-right"></i></a></li>
            }
        </ul><!-- /.flat-pagination -->
    </div>
}
<input type="hidden" id="searchTerm" value="@Model.searchTerm" />
<input type="hidden" id="sortBy" value="@Model.sortBy" />
<input type="hidden" id="categoryID" value="@Model.CategoryID" />
<script src="~/Content/javascript/main.js"></script>
<script type="text/javascript">
    $(".pageDataLink").click(function () {
        var url = $(this).attr("data-href");
        if (url != null || url != undefined) {
            getDataLink(url);
        }
    });
    var products;
    $(".productAddToCart").click(function () {
        debugger;
        var existingCookieData = $.cookie('CartProducts');
        if (existingCookieData != undefined && existingCookieData != "" && existingCookieData != null) {
            products = existingCookieData.split('-');
        } else {
            products = [];
        }
        var productID = $(this).attr("data-id");
        products.push(productID);
        $.cookie('CartProducts', products.join('-'), { expires: 10, path: '/' });
        updateCartProducts();
        const Toast = Swal.mixin({
            toast: true,
            position: 'bottom-end',
            showConfirmButton: false,
            timer: 1000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        Toast.fire({
            icon: 'success',
            title: 'Add in successfully'
        })
    });

</script>

