@using ClothKai.Web.Code
@using ClothKai.Web.ViewModels
@model ClothKai.Web.ViewModels.ShopViewModel
@{
    ViewBag.Title = "Index";
    var filterProductsViewModel = new FilterProductsViewModel();
}

<!-- Page title -->
<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">Slidebar Shop</h1>
                </div><!-- /.page-title-heading -->
                <div class="breadcrumbs">
                    <ul>
                        <li><a href="index.html">Home</a></li>
                        <li><a href="shop-3col.html">Shop</a></li>
                        <li><a href="shop-3col-slide.html">Slidebarshop</a></li>
                    </ul>
                </div><!-- /.breadcrumbs -->
            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="@Url.Action("Index", "Shop")">
                            <label>
                                <input type="search" class="search-field" placeholder="Search" value="@Model.searchTerm" name="searchTerm">
                                @if (Model.CategoryID != null)
                                {
                                    <input name="categoryID" value="@Model.CategoryID" type="hidden" />
                                }
                                @if (Model.sortBy != null)
                                {
                                    <input name="sortBy" value="@Model.sortBy" type="hidden" />
                                }
                            </label>
                            <input type="submit" class="search-submit" value="Search">
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            <li><a href="@Url.Action("Index", "Shop", new { searchTerm = Model.searchTerm, categoryID = Model.CategoryID, sortBy = (int)SortByEnums.Defaut })" class="@(Model.sortBy.HasValue ? Model.sortBy.Value == (int)SortByEnums.Defaut ? "active" : string.Empty : string.Empty)">Default</a></li>
                            <li><a href="@Url.Action("Index", "Shop", new { searchTerm = Model.searchTerm, categoryID = Model.CategoryID, sortBy = (int)SortByEnums.Popularity })" class="@(Model.sortBy.HasValue ? Model.sortBy.Value == (int)SortByEnums.Popularity ? "active" : string.Empty : string.Empty)">Popularity</a></li>
                            <li><a href="@Url.Action("Index", "Shop", new { searchTerm = Model.searchTerm, categoryID = Model.CategoryID, sortBy = (int)SortByEnums.PriceLowToHigh })" class="@(Model.sortBy.HasValue ? Model.sortBy.Value == (int)SortByEnums.PriceLowToHigh ? "active" : string.Empty : string.Empty)">Price: low to high</a></li>
                            <li><a href="@Url.Action("Index", "Shop", new { searchTerm = Model.searchTerm, categoryID = Model.CategoryID, sortBy = (int)SortByEnums.PriceHighToLow })" class="@(Model.sortBy.HasValue ? Model.sortBy.Value == (int)SortByEnums.PriceHighToLow ? "active" : string.Empty : string.Empty)">Price: high to low</a></li>
                        </ul>
                    </div>
                    <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div>
                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Category
                        </h5>
                        <div class="tag-list">
                            <a href="#">All products</a>
                            @foreach (var categories in Model.Categories)
                            {
                                <a href="@Url.Action("Index", "Shop", new { searchTerm = Model.searchTerm, categoryID = categories.ID, sortBy = Model.sortBy })" class="@(Model.CategoryID.HasValue ? Model.CategoryID.Value == categories.ID ? "active" : string.Empty : string.Empty )">@categories.Name</a>
                            }
                        </div>
                    </div><!-- /.widget -->
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->
            <div class="col-md-9">
                <div id="productsDiv">
                    @{
                        filterProductsViewModel.Products = Model.Products;
                        filterProductsViewModel.Pager = Model.Pager;
                        Html.RenderPartial("FilterProducts", filterProductsViewModel);
                    }
                </div>
            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->
<script>
    var callTimeout;

    var flatPrice = $("#slide-range").slider({
        range: true,
        min: 0,
        max: @Model.MaxnimumPrice,
        values: [0, @Model.MaxnimumPrice],
        slide: function (event, ui) {
            var minPrice = ui.values[0];
            var maxPrice = ui.values[1];
            $("#amount").val("$" + minPrice + ".00" + " - " + "$" + maxPrice + ".00");
            clearTimeout(callTimeout);
            callTimeout = setTimeout(getData,500);
        }
    });
    function getData() {
        console.log("GetData Call");
        $.ajax({
            url: '@Url.Action("FilterProducts", "Shop")',
            data: {
                searchTerm: '@Model.searchTerm',
                categoryID: '@Model.CategoryID',
                sortBy: '@Model.sortBy',
                minnimumPrice: flatPrice.slider("values", 0),
                maxnimumPrice: flatPrice.slider("values", 1)   
            }
        })
            .done(function (response) {
                $('#productsDiv').html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Error");
            });
    }
</script>